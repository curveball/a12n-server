# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Test
on:
  push:
    branches: [ main ]
  pull_request:
 
jobs:

  build:
    strategy:
      matrix:
        node-version: ['18.x', '20.x', '22.x']
    name: Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm ci
    - run: npm run build --if-present
  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js
      uses: actions/setup-node@v4
    - run: npm ci
    - run: make lint
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['18.x', '20.x', '22.x']
        db-driver: ['mysql', 'postgres', 'sqlite3']
    needs: build
    services:
      mysql:
        image: mysql
        ports:
          - 3306:3306
      postgres:
        image: postgres
        ports:
          - 5432:5432
    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm ci
    - run: make test
    - name: Test MySQL migrations
      if: matrix.db-driver == 'mysql'
      env:
        DB_DRIVER: mysql
        DB_USER: a12nserver
        DB_PASSWORD: password
        DB_DATABASE: a12nserver
        DB_ROOT_PASSWORD: password
      run: |
        make knex-migrate
        make knex-seed
    - name: Test Postgres migrations
      if: matrix.db-driver == 'postgres'
      env:
        POSTGRES_USER: a12nserver
        POSTGRES_PASSWORD: password
        POSTGRES_DATABASE: a12nserver
        POSTGRES_HOST: 127.0.0.1
      run: |
        PGPASSWORD=password psql -h 127.0.0.1 -d a12nserver -U a12nserver -c 'CREATE SCHEMA a12nserver;'
        make knex-migrate
        make knex-seed
    - name: Test SQLite migrations
      if: matrix.db-driver == 'sqlite3'
      env:
        DB_DRIVER: sqlite3
        DB_FILENAME: "${{ github.workspace }}/a12nserver.sqlite3"
      run: |
        make knex-migrate
        make knex-seed
